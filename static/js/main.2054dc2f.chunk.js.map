{"version":3,"sources":["types/SortType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortType","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","setQuery","sortType","setSortType","action","method","htmlFor","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","loading","setLoading","user","setUser","useEffect","userId","finally","href","email","name","normalizeQuery","toLowerCase","trim","App","setTodos","data","copyTodos","filter","includes","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2054dc2f.chunk.js","sourcesContent":["export enum SortType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (v: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selectedTodo,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <div className=\"icon\">\n                <i\n                  className={classNames({\n                    'far fa-eye': !selectedTodo,\n                    'far fa-eye-slash': selectedTodo,\n                  })}\n                />\n              </div>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { SortType } from '../../types/SortType';\n\ntype Props = {\n  query: string;\n  setQuery: (v: string) => void;\n  sortType: string;\n  setSortType: (v: SortType) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  sortType,\n  setSortType,\n}) => (\n  <>\n    <form\n      className=\"field has-addons\"\n      action=\"/api/todos\"\n      method=\"POST\"\n    >\n      <div className=\"control\">\n        <label className=\"select\" htmlFor=\"select-id\">\n          <select\n            data-cy=\"statusSelect\"\n            value={sortType}\n            onChange={(event) => setSortType(event.target.value as SortType)}\n          >\n            <option value={SortType.All}>All</option>\n            <option value={SortType.Active}>Active</option>\n            <option value={SortType.Completed}>Completed</option>\n          </select>\n        </label>\n      </div>\n\n      <label className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </label>\n    </form>\n  </>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | undefined) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo?: Todo | null;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onClose,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo?.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { SortType } from './types/SortType';\n\nfunction normalizeQuery(query: string) {\n  return query.toLowerCase().trim();\n}\n\nfunction filterTodos(todos: Todo[], sortType: string, query: string): Todo[] {\n  let copyTodos = [...todos];\n\n  switch (sortType) {\n    case SortType.Active:\n      copyTodos = copyTodos.filter(todo => !todo.completed);\n      break;\n    case SortType.Completed:\n      copyTodos = copyTodos.filter(todo => todo.completed);\n      break;\n    case SortType.All:\n    default: break;\n  }\n\n  return copyTodos.filter(todo => normalizeQuery(todo.title)\n    .includes(normalizeQuery(query)));\n}\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.All);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos().then((data) => setTodos(filterTodos(data, sortType, query)))\n      .then(() => setLoading(false));\n  }, [sortType, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                sortType={sortType}\n                setSortType={(type: SortType) => setSortType(type)}\n\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={todos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}